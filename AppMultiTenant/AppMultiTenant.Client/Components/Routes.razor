@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Web

<Router AppAssembly="typeof(Program).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="typeof(Layout.MainLayout)">
            <NotAuthorized>
                @if (context.User.Identity?.IsAuthenticated != true)
                {
                    <RedirectToLogin ReturnUrl="@routeData.PageType.Name" />
                }
                else
                {
                    <MudContainer Class="mt-6 px-8" MaxWidth="MaxWidth.Medium">
                        <MudPaper Elevation="3" Class="pa-4">
                            <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Icon="@Icons.Material.Filled.Lock" Class="mb-4">
                                No tienes permisos para acceder a esta página.
                            </MudAlert>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/" Class="mt-2">Volver al inicio</MudButton>
                        </MudPaper>
                    </MudContainer>
                }
            </NotAuthorized>
            <Authorizing>
                <MudContainer Class="d-flex justify-center mt-10">
                    <MudProgressCircular Indeterminate="true" Size="Size.Large" />
                </MudContainer>
            </Authorizing>
        </AuthorizeRouteView>
        <FocusOnNavigate RouteData="routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>No encontrado</PageTitle>
        <LayoutView Layout="typeof(Layout.MainLayout)">
            <MudContainer Class="mt-6 px-8" MaxWidth="MaxWidth.Medium">
                <MudPaper Elevation="3" Class="pa-4">
                    <MudText Typo="Typo.h4" Class="mb-4">Lo sentimos, no hay nada en esta dirección.</MudText>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Link="/">Volver al inicio</MudButton>
                </MudPaper>
            </MudContainer>
        </LayoutView>
    </NotFound>
</Router>

@code {
    [CascadingParameter] private Task<AuthenticationState> AuthState { get; set; }
}

@* Componente interno para redireccionar al login *@
@code {
    public class RedirectToLogin : ComponentBase
    {
        [Inject] private NavigationManager Navigation { get; set; }
        
        [Parameter] public string ReturnUrl { get; set; }

        protected override void OnInitialized()
        {
            // Obtener la URL actual completa
            var currentUri = Navigation.Uri;
            
            // Redirigir a login con la URL actual como returnUrl
            Navigation.NavigateTo($"/login?returnUrl={Uri.EscapeDataString(currentUri)}", forceLoad: false);
        }
    }
}
