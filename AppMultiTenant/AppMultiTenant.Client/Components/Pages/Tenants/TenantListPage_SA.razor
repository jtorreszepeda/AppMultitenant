@page "/superadmin/tenants"
@using AppMultiTenant.Client.ViewModels
@using AppMultiTenant.Client.Services
@using System.Threading
@using AppMultiTenant.Client.Components.Auth
@inject TenantListViewModel_SA ViewModel
@inject NavigationManager NavigationManager

<PageTitle>Gestión de Inquilinos - Super Administrador</PageTitle>

<RequireRole Roles="SystemAdmin">
    <div class="container-fluid px-4">
        <h1 class="mt-4">Inquilinos</h1>
        <ol class="breadcrumb mb-4">
            <li class="breadcrumb-item"><a href="/">Inicio</a></li>
            <li class="breadcrumb-item active">Inquilinos</li>
        </ol>

        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <div>
                    <i class="fas fa-building me-1"></i>
                    Lista de Inquilinos
                </div>
                <div>
                    <a href="/superadmin/tenants/create" class="btn btn-primary btn-sm">
                        <i class="fas fa-plus me-1"></i> Nuevo Inquilino
                    </a>
                </div>
            </div>
            <div class="card-body">
                <!-- Filtros y búsqueda -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Buscar inquilinos..." 
                                   @bind="ViewModel.SearchTerm" @bind:event="oninput" @onkeyup="HandleSearchKeyUp" />
                            <button class="btn btn-outline-secondary" type="button" @onclick="SearchTenants">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-md-6 text-end">
                        <div class="form-check form-switch d-inline-block me-2">
                            <input class="form-check-input" type="checkbox" id="includeInactive" 
                                   checked="@ViewModel.IncludeInactive" @onchange="ToggleIncludeInactive" />
                            <label class="form-check-label" for="includeInactive">Incluir inactivos</label>
                        </div>
                    </div>
                </div>

                <!-- Mensaje de error -->
                @if (!string.IsNullOrEmpty(ViewModel.ErrorMessage))
                {
                    <div class="alert alert-danger">@ViewModel.ErrorMessage</div>
                }

                <!-- Indicador de carga -->
                @if (ViewModel.IsLoading)
                {
                    <div class="d-flex justify-content-center my-3">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Cargando...</span>
                        </div>
                    </div>
                }
                else
                {
                    <!-- Tabla de inquilinos -->
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Nombre</th>
                                    <th>Identificador</th>
                                    <th>Estado</th>
                                    <th>Fecha de Creación</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewModel.Tenants.Count == 0)
                                {
                                    <tr>
                                        <td colspan="5" class="text-center">No se encontraron inquilinos.</td>
                                    </tr>
                                }
                                else
                                {
                                    @foreach (var tenant in ViewModel.Tenants)
                                    {
                                        <tr>
                                            <td>@tenant.Name</td>
                                            <td><code>@tenant.Identifier</code></td>
                                            <td>
                                                @if (tenant.IsActive)
                                                {
                                                    <span class="badge bg-success">Activo</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">Inactivo</span>
                                                }
                                            </td>
                                            <td>@tenant.CreatedDate</td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="@($"/superadmin/tenants/edit/{tenant.Id}")" class="btn btn-sm btn-outline-primary">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    @if (tenant.IsActive)
                                                    {
                                                        <button @onclick="() => DeactivateTenant(tenant.Id)" class="btn btn-sm btn-outline-warning"
                                                                title="Desactivar inquilino">
                                                            <i class="fas fa-ban"></i>
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button @onclick="() => ActivateTenant(tenant.Id)" class="btn btn-sm btn-outline-success"
                                                                title="Activar inquilino">
                                                            <i class="fas fa-check"></i>
                                                        </button>
                                                    }
                                                    <button @onclick="() => ConfirmDeleteTenant(tenant.Id, tenant.Name)" 
                                                            class="btn btn-sm btn-outline-danger" title="Eliminar inquilino">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>

        <!-- Modal de confirmación para eliminar -->
        @if (_showDeleteModal)
        {
            <div class="modal fade show" style="display: block; background-color: rgba(0,0,0,0.5);" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header bg-danger text-white">
                            <h5 class="modal-title">Confirmar eliminación</h5>
                            <button type="button" class="btn-close" @onclick="CancelDelete"></button>
                        </div>
                        <div class="modal-body">
                            <p class="mb-3">¿Está seguro que desea eliminar el inquilino <strong>@_tenantToDeleteName</strong>?</p>
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                <strong>ADVERTENCIA:</strong> Esta acción eliminará permanentemente todos los datos asociados al inquilino, incluyendo usuarios, roles y secciones. Esta acción no se puede deshacer.
                            </div>
                            <div class="form-check mt-3">
                                <input class="form-check-input" type="checkbox" id="confirmDelete" @bind="_confirmDelete">
                                <label class="form-check-label" for="confirmDelete">
                                    Confirmo que deseo eliminar permanentemente este inquilino
                                </label>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="CancelDelete">Cancelar</button>
                            <button type="button" class="btn btn-danger" disabled="@(!_confirmDelete)" @onclick="DeleteTenant">
                                <i class="fas fa-trash me-1"></i> Eliminar
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</RequireRole>

@code {
    private bool _showDeleteModal = false;
    private string _tenantToDeleteId = string.Empty;
    private string _tenantToDeleteName = string.Empty;
    private bool _confirmDelete = false;
    private Timer _searchTimer;

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadTenantsAsync();
    }

    private async Task ActivateTenant(string tenantId)
    {
        await ViewModel.ActivateTenantAsync(tenantId);
    }

    private async Task DeactivateTenant(string tenantId)
    {
        await ViewModel.DeactivateTenantAsync(tenantId);
    }

    private void ConfirmDeleteTenant(string tenantId, string tenantName)
    {
        _tenantToDeleteId = tenantId;
        _tenantToDeleteName = tenantName;
        _confirmDelete = false;
        _showDeleteModal = true;
        StateHasChanged();
    }

    private async Task DeleteTenant()
    {
        await ViewModel.DeleteTenantAsync(_tenantToDeleteId);
        CancelDelete();
    }

    private void CancelDelete()
    {
        _showDeleteModal = false;
        _tenantToDeleteId = string.Empty;
        _tenantToDeleteName = string.Empty;
        _confirmDelete = false;
        StateHasChanged();
    }

    private async Task ToggleIncludeInactive()
    {
        await ViewModel.ToggleIncludeInactiveAsync();
    }

    private void HandleSearchKeyUp(KeyboardEventArgs e)
    {
        // Cancelar el timer anterior si existe
        _searchTimer?.Dispose();

        // Configurar un nuevo timer que se ejecute después de 500ms
        _searchTimer = new Timer(async _ =>
        {
            await InvokeAsync(SearchTenants);
        }, null, 500, Timeout.Infinite);

        // Si el usuario presiona Enter, buscar inmediatamente
        if (e.Key == "Enter")
        {
            _searchTimer?.Dispose();
            SearchTenants();
        }
    }

    private async Task SearchTenants()
    {
        await ViewModel.ApplySearchFilterAsync();
    }
} 