@page "/section-definitions/create"
@using AppMultiTenant.Client.ViewModels
@using System.ComponentModel.DataAnnotations
@using AppMultiTenant.Client.Components.Auth
@inject CreateSectionDefinitionViewModel ViewModel
@inject NavigationManager NavigationManager

<PageTitle>Crear Nueva Definición de Sección</PageTitle>

<RequireRole Roles="SystemAdmin,TenantAdmin">
    <div class="container-fluid px-4">
        <h1 class="mt-4">Crear Definición de Sección</h1>
        <ol class="breadcrumb mb-4">
            <li class="breadcrumb-item"><a href="/">Inicio</a></li>
            <li class="breadcrumb-item"><a href="/section-definitions">Definiciones de Secciones</a></li>
            <li class="breadcrumb-item active">Crear Definición</li>
        </ol>

        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-table me-1"></i>
                Formulario de Nueva Definición de Sección
            </div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(ViewModel.ErrorMessage))
                {
                    <div class="alert alert-danger">@ViewModel.ErrorMessage</div>
                }

                @if (!string.IsNullOrEmpty(ViewModel.SuccessMessage))
                {
                    <div class="alert alert-success">@ViewModel.SuccessMessage</div>
                }

                <EditForm Model="ViewModel" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group mb-3">
                        <label for="name">Nombre de la Sección</label>
                        <InputText id="name" @bind-Value="ViewModel.Name" class="form-control" />
                        <ValidationMessage For="@(() => ViewModel.Name)" />
                    </div>

                    <div class="form-group mb-3">
                        <label for="description">Descripción</label>
                        <InputTextArea id="description" @bind-Value="ViewModel.Description" class="form-control" rows="3" />
                        <ValidationMessage For="@(() => ViewModel.Description)" />
                    </div>

                    <hr class="my-4">

                    <h4>Campos de la Sección</h4>
                    <p class="text-muted">Define los campos que contendrá esta sección</p>

                    <div class="table-responsive mb-3">
                        <table class="table table-bordered table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Nombre</th>
                                    <th>Tipo de Dato</th>
                                    <th>Requerido</th>
                                    <th>Orden</th>
                                    <th style="width: 80px">Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewModel.TemporaryFields.Count == 0)
                                {
                                    <tr>
                                        <td colspan="5" class="text-center">No se han agregado campos a esta sección</td>
                                    </tr>
                                }
                                else
                                {
                                    @foreach (var field in ViewModel.TemporaryFields)
                                    {
                                        <tr>
                                            <td>@field.Name</td>
                                            <td>@field.DataType</td>
                                            <td>@(field.IsRequired ? "Sí" : "No")</td>
                                            <td>@field.DisplayOrder</td>
                                            <td>
                                                <button type="button" class="btn btn-sm btn-outline-danger" @onclick="() => ViewModel.RemoveTemporaryField(field.Id)">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="card mb-4">
                        <div class="card-header bg-light">
                            <i class="fas fa-plus-circle me-1"></i>
                            Agregar Nuevo Campo
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <label for="tempFieldName">Nombre del Campo</label>
                                    <InputText id="tempFieldName" @bind-Value="ViewModel.TempFieldName" class="form-control" />
                                    <ValidationMessage For="@(() => ViewModel.TempFieldName)" />
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tempFieldDataType">Tipo de Dato</label>
                                    <InputSelect id="tempFieldDataType" @bind-Value="ViewModel.TempFieldDataType" class="form-select">
                                        @foreach (var dataType in ViewModel.AvailableDataTypes)
                                        {
                                            <option value="@dataType">@dataType</option>
                                        }
                                    </InputSelect>
                                    <ValidationMessage For="@(() => ViewModel.TempFieldDataType)" />
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tempFieldDisplayOrder">Orden de Visualización</label>
                                    <InputNumber id="tempFieldDisplayOrder" @bind-Value="ViewModel.TempFieldDisplayOrder" class="form-control" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <div class="form-check mt-4">
                                        <InputCheckbox id="tempFieldIsRequired" @bind-Value="ViewModel.TempFieldIsRequired" class="form-check-input" />
                                        <label class="form-check-label" for="tempFieldIsRequired">
                                            Campo Requerido
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-8 mb-3">
                                    <label for="tempFieldConfigJson">Configuración JSON (opcional)</label>
                                    <InputTextArea id="tempFieldConfigJson" @bind-Value="ViewModel.TempFieldConfigJson" class="form-control" rows="2" />
                                    <small class="text-muted">Ej: {"options": ["Opción 1", "Opción 2"]} para tipos SingleSelect/MultiSelect</small>
                                </div>
                            </div>
                            <div class="d-flex justify-content-end">
                                <button type="button" class="btn btn-outline-primary" @onclick="() => ViewModel.AddTemporaryField()">
                                    <i class="fas fa-plus me-1"></i> Agregar Campo
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="form-group mt-4 d-flex justify-content-between">
                        <button type="button" class="btn btn-secondary" @onclick="NavigateToSectionDefinitionList">
                            <i class="fas fa-arrow-left me-1"></i> Volver
                        </button>
                        <button type="submit" class="btn btn-primary" disabled="@ViewModel.IsSaving">
                            @if (ViewModel.IsSaving)
                            {
                                <span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span>
                                <span>Guardando...</span>
                            }
                            else
                            {
                                <i class="fas fa-save me-1"></i>
                                <span>Guardar Definición</span>
                            }
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</RequireRole>

@code {
    protected override void OnInitialized()
    {
        // Inicializar el ViewModel
        ViewModel.ResetForm();
    }

    private async Task HandleValidSubmit()
    {
        if (ViewModel.TemporaryFields.Count == 0)
        {
            ViewModel.ErrorMessage = "Debe agregar al menos un campo a la definición de sección";
            return;
        }

        await ViewModel.CreateSectionDefinitionAsync();
        
        if (string.IsNullOrEmpty(ViewModel.ErrorMessage))
        {
            NavigateToSectionDefinitionList();
        }
    }

    private void NavigateToSectionDefinitionList()
    {
        NavigationManager.NavigateTo("/section-definitions");
    }
} 