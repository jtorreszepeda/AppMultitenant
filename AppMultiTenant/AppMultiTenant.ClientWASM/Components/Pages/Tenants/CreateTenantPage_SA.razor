@page "/superadmin/tenants/create"
@inject CreateTenantViewModel_SA ViewModel
@inject NavigationManager NavigationManager

<PageTitle>Crear Nuevo Inquilino - Super Administrador</PageTitle>

<div class="container-fluid px-4">
    <h1 class="mt-4">Crear Nuevo Inquilino</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/">Inicio</a></li>
        <li class="breadcrumb-item"><a href="/superadmin/tenants">Inquilinos</a></li>
        <li class="breadcrumb-item active">Crear Nuevo</li>
    </ol>

    <div class="row">
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-building me-1"></i>
                    Datos del Nuevo Inquilino
                </div>
                <div class="card-body">
                    <!-- Mensaje de error -->
                    @if (!string.IsNullOrEmpty(ViewModel.ErrorMessage))
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle me-2"></i>
                            @ViewModel.ErrorMessage
                            <button type="button" class="btn-close" @onclick="@(() => ViewModel.ErrorMessage = string.Empty)"></button>
                        </div>
                    }

                    <!-- Mensaje de éxito -->
                    @if (ViewModel.IsCreated && !string.IsNullOrEmpty(ViewModel.SuccessMessage))
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>
                            @ViewModel.SuccessMessage
                            <button type="button" class="btn-close" @onclick="@(() => ViewModel.SuccessMessage = string.Empty)"></button>
                        </div>
                    }

                    <!-- Formulario de creación -->
                    <EditForm Model="@ViewModel" OnValidSubmit="@CreateTenant">
                        <DataAnnotationsValidator />

                        <div class="row mb-4">
                            <div class="col-12">
                                <h5 class="mb-3">Información del Inquilino</h5>
                            </div>

                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <InputText id="tenantName" class="form-control" @bind-Value="ViewModel.TenantName" />
                                    <label for="tenantName">Nombre del Inquilino</label>
                                </div>
                                <ValidationMessage For="@(() => ViewModel.TenantName)" class="text-danger" />
                                <div class="form-text">El nombre visible de la organización o empresa.</div>
                            </div>

                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <InputText id="tenantIdentifier" class="form-control" @bind-Value="ViewModel.TenantIdentifier" />
                                    <label for="tenantIdentifier">Identificador Único</label>
                                </div>
                                <ValidationMessage For="@(() => ViewModel.TenantIdentifier)" class="text-danger" />
                                <div class="form-text">Solo letras minúsculas, números y guiones. Se usará para el subdominio de acceso.</div>
                            </div>

                            <div class="col-md-12 mb-3">
                                <div class="form-check form-switch">
                                    <InputCheckbox id="isActive" class="form-check-input" @bind-Value="ViewModel.IsActive" />
                                    <label class="form-check-label" for="isActive">Activar inmediatamente</label>
                                </div>
                                <div class="form-text">Si está desactivado, los usuarios no podrán acceder hasta que se active.</div>
                            </div>
                        </div>

                        <div class="row mb-4">
                            <div class="col-12">
                                <h5 class="mb-3">Administrador Inicial</h5>
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    Las siguientes credenciales se asignarán a un usuario con rol de "Administrador de Inquilino".
                                </div>
                            </div>

                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <InputText id="adminUserName" class="form-control" @bind-Value="ViewModel.AdminUserName" />
                                    <label for="adminUserName">Nombre de Usuario</label>
                                </div>
                                <ValidationMessage For="@(() => ViewModel.AdminUserName)" class="text-danger" />
                            </div>

                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <InputText id="adminFullName" class="form-control" @bind-Value="ViewModel.AdminFullName" />
                                    <label for="adminFullName">Nombre Completo</label>
                                </div>
                                <ValidationMessage For="@(() => ViewModel.AdminFullName)" class="text-danger" />
                            </div>

                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <InputText id="adminEmail" class="form-control" @bind-Value="ViewModel.AdminEmail" />
                                    <label for="adminEmail">Correo Electrónico</label>
                                </div>
                                <ValidationMessage For="@(() => ViewModel.AdminEmail)" class="text-danger" />
                            </div>

                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <InputText id="adminPassword" type="password" class="form-control" @bind-Value="ViewModel.AdminPassword" />
                                    <label for="adminPassword">Contraseña</label>
                                </div>
                                <ValidationMessage For="@(() => ViewModel.AdminPassword)" class="text-danger" />
                                <div class="form-text">La contraseña debe tener al menos 6 caracteres.</div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a href="/superadmin/tenants" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-1"></i> Volver a Inquilinos
                            </a>
                            <div>
                                <button type="button" class="btn btn-outline-secondary me-2" @onclick="ViewModel.ResetForm">
                                    <i class="fas fa-undo me-1"></i> Limpiar
                                </button>
                                <button type="submit" class="btn btn-primary" disabled="@ViewModel.IsLoading">
                                    @if (ViewModel.IsLoading)
                                    {
                                        <span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span>
                                        <span>Creando...</span>
                                    }
                                    else
                                    {
                                        <i class="fas fa-save me-1"></i>
                                        <span>Crear Inquilino</span>
                                    }
                                </button>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-info-circle me-1"></i>
                    Información
                </div>
                <div class="card-body">
                    <h5>Acerca de los Inquilinos</h5>
                    <p>
                        Un inquilino representa una organización o empresa completa en el sistema. Cada inquilino tiene:
                    </p>
                    <ul>
                        <li>Sus propios usuarios y administradores</li>
                        <li>Configuración de roles y permisos</li>
                        <li>Definiciones de secciones de datos</li>
                        <li>Datos completamente aislados de otros inquilinos</li>
                    </ul>
                    <hr />
                    <h5>Acceso al Inquilino</h5>
                    <p>
                        Los usuarios accederán a través del identificador único, usando:
                        <br />
                        <code>https://<strong>[identificador]</strong>.dominio.com</code>
                    </p>
                    <p>
                        <strong>Ejemplo:</strong> Si el identificador es "empresa", el acceso será:
                        <br />
                        <code>https://empresa.dominio.com</code>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private async Task CreateTenant()
    {
        await ViewModel.CreateTenantAsync();
    }

    protected override void OnInitialized()
    {
        // Resetear el formulario por si hay datos persistidos de una navegación anterior
        ViewModel.ResetForm();
    }
} 