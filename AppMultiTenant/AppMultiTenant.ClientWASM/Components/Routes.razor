@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager

<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@GetLayoutForRoute(routeData)">
                <NotAuthorized>
                    @if (context.User.Identity?.IsAuthenticated != true)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <RedirectToAccessDenied />
                    }
                </NotAuthorized>
                <Authorizing>
                    <div class="container mt-5 text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Cargando...</span>
                        </div>
                        <p class="mt-2">Verificando permisos...</p>
                    </div>
                </Authorizing>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(Layout.MainLayout)">
                <div class="container mt-5">
                    <div class="alert alert-warning" role="alert">
                        <h4 class="alert-heading">Página no encontrada</h4>
                        <p>Lo sentimos, la página que está buscando no existe.</p>
                        <hr>
                        <p class="mb-0">
                            <a href="/" class="alert-link">Regresar a la página principal</a>
                        </p>
                    </div>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private Type GetLayoutForRoute(RouteData routeData)
    {
        // Obtener la URL actual
        var currentUrl = NavigationManager.Uri;
        
        // Verificar si la URL comienza con "/superadmin/"
        if (currentUrl.Contains("/superadmin/"))
        {
            return typeof(Layout.SuperAdminLayout);
        }
        
        // También verificamos por tipo de página como respaldo
        var path = routeData.PageType.FullName ?? string.Empty;
        if (path.Contains("Pages.Tenants.") && path.Contains("_SA"))
        {
            return typeof(Layout.SuperAdminLayout);
        }
        
        // Para cualquier otra ruta, usamos el layout principal
        return typeof(Layout.MainLayout);
    }
}
