@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject CustomAuthenticationStateProvider AuthStateProvider
@inject IAuthApiClient AuthApiClient
@inject IJSRuntime JSRuntime

<div class="page sa-layout">
    <div class="sidebar sa-sidebar">
        <SuperAdminNavMenu />
    </div>

    <main>
        <div class="top-row px-4 sa-top-row">
            <div class="d-flex align-items-center">
                <span class="badge bg-danger me-3">SUPER ADMIN</span>
                <AuthorizeView>
                    <Authorized>
                        <div class="d-flex align-items-center">
                            <span class="me-3">Bienvenido, @context.User.Identity?.Name</span>
                            <button class="btn btn-outline-danger btn-sm" @onclick="Logout">
                                <i class="fas fa-sign-out-alt me-1"></i> Cerrar sesión
                            </button>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <div>
                            <a href="/login" class="btn btn-outline-primary btn-sm me-2">
                                <i class="fas fa-sign-in-alt me-1"></i> Iniciar sesión
                            </a>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private async Task Logout()
    {
        try
        {
            await AuthApiClient.LogoutAsync();
            await AuthStateProvider.MarkUserAsLoggedOut();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", $"Error al cerrar sesión: {ex.Message}");
        }
    }
} 